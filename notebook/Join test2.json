{
	"name": "Join test2",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "mjspark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "04c0f07f-4c98-4aa2-b26a-82de4bf0cc55"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "scala"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/56d6b236-457d-47db-9ae4-a4452761ab68/resourceGroups/IPpod/providers/Microsoft.Synapse/workspaces/mjsynapseworkspace/bigDataPools/mjspark",
				"name": "mjspark",
				"type": "Spark",
				"endpoint": "https://mjsynapseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mjspark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"val person = Seq(\r\n",
					"    (0, \"Bill Chambers\", 0, Seq(100)),\r\n",
					"    (1, \"Matei Zaharia\", 1, Seq(500, 250, 100)),\r\n",
					"    (2, \"Michael Armbrust\", 1, Seq(250, 100)))\r\n",
					"  .toDF(\"id\", \"name\", \"graduate_program\", \"spark_status\")\r\n",
					"val graduateProgram = Seq(\r\n",
					"    (0, \"Masters\", \"School of Information\", \"UC Berkeley\"),\r\n",
					"    (2, \"Masters\", \"EECS\", \"UC Berkeley\"),\r\n",
					"    (1, \"Ph.D.\", \"EECS\", \"UC Berkeley\"))\r\n",
					"  .toDF(\"id\", \"degree\", \"department\", \"school\")\r\n",
					"val sparkStatus = Seq(\r\n",
					"    (500, \"Vice President\"),\r\n",
					"    (250, \"PMC Member\"),\r\n",
					"    (100, \"Contributor\"))\r\n",
					"  .toDF(\"id\", \"status\")"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"graduateProgram.show()\r\n",
					"person.show()\r\n",
					"sparkStatus.show()"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"//val innerjoinResult = person.join(graduateProgram, \"id\")\r\n",
					"//innerjoinResult.show()\r\n",
					"innerjoinResult.explain()"
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"val joinResult = person.hint(\"SHUFFLE_HASH\").join(graduateProgram, \"id\")\r\n",
					"joinResult.explain()"
				],
				"execution_count": 32
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"person.createOrReplaceTempView(\"Person\")\r\n",
					"graduateProgram.createOrReplaceTempView(\"graduateProgram\")\r\n",
					"sparkStatus.createOrReplaceTempView(\"sparkStatus\")\r\n",
					""
				],
				"execution_count": 35
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"explain select /*+ MERGE(Person) */ g.id,g.school from Person p JOIN graduateProgram g ON p.graduate_program = g.id ;"
				],
				"execution_count": 56
			}
		]
	}
}